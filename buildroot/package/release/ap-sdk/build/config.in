#over all project parameters
PROJECT		= ap-sdk
PROJECT_VERSION	= 1.0.0.0
PROJECT_BUILD	= 1

SDK_VERSION = 1.0

#project directories
PROJECT_ROOT	= ${shell pwd}/..
PACKAGE_DIR	= ${PROJECT_ROOT}/$(SDK_VERSION)
OUTPUT_DIR	= ${PROJECT_ROOT}/output/${PROJECT}
KERNEL_SRC	= ${PROJECT_ROOT}/linux/kernel/mips-linux-2.6.15
KERNEL_OBJ	= ${PROJECT_ROOT}/linux/kernel1
TOOLCHAIN_DIR	= ${PROJECT_ROOT}/tools/toolchain
ROOTFS_DIR	= ${PROJECT_ROOT}/linux/rootfs
ROOTFS_NAME	= ramdisk.img
AP_FLASH_IMG	= rcks_fw.bl7
NET_BOOT_IMG	= vmlinux

KERNE_CONFIG	= ${PROJECT_ROOT}/config/kernel-config
DEV_TABLE	= ${PROJECT_ROOT}/config/dev_table.txt

#compile options
ARCH		= mips
TARGET		= ${ARCH}-linux
HOST		:= i686-linux
PREFIX		= ${TOOLCHAIN_DIR}
TARGET_PREFIX	= ${PREFIX}/${TARGET}
CROSS_COMPILE	= ${TARGET}-
AS		= ${CROSS_COMPILE}as
AR		= ${CROSS_COMPILE}ar
CC		= ${CROSS_COMPILE}gcc
CPP		= ${CROSS_COMPILE}gcc -E
LD		= ${CROSS_COMPILE}ld
NM		= ${CROSS_COMPILE}nm
OBJCOPY		= ${CROSS_COMPILE}objcopy
OBJDUMP		= ${CROSS_COMPILE}objdump
RANLIB		= ${CROSS_COMPILE}ranlib
READELF		= ${CROSS_COMPILE}readelf
SIZE		= ${CROSS_COMPILE}size
STRINGS		= ${CROSS_COMPILE}strings
STRIP		= ${CROSS_COMPILE}strip
LZMA		= ${PREFIX}/bin/lzma
BINMD5		= ${PREFIX}/bin/binmd5
FAKEROOT_LIB	= ${PREFIX}/usr/lib/libfakeroot.so
FAKEROOT_BIN	= ${PREFIX}/usr/bin/faked
KERNELPATH_ABS = ${KERNEL_SRC}
CFLAGS_KERNEL	= -I${KERNEL_SRC}/drivers/v54bsp -DRKS_SYSTEM_HOOKS=1 -DV54_FLASH_ROOTFS -DV54_MOUNT_FLASH_ROOTFS -DDRAM_MB=64 -DV54_BSP=1
CONFIG_PLATFORM =
KERNELVERSION = 2.6

#export params
export PROJECT PROJECT_VERSION PROJECT_BUILD 
export ARCH PATH TARGET HOST PREFIX CROSS_COMPILE CFLAGS_KERNEL TOOLCHAIN_DIR
export AS AR CC CPP LD NM OBJCOPY OBJDUMP RANLIB SIZE STRINGS STRIP KERNELPATH_ABS CONFIG_PLATFORM KERNELVERSION
