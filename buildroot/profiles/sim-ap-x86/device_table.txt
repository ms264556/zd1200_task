# When building a target filesystem, it is desirable to not have to
# become root and then run 'mknod' a thousand times.  Using a device 
# table you can create device nodes and directories "on the fly".
#
# This is a sample device table file for use with genext2fs.  You can
# do all sorts of interesting things with a device table file.  For
# example, if you want to adjust the permissions on a particular file
# you can just add an entry like:
#   /sbin/foobar        f       2755    0       0       -       -       -       -       -
# and (assuming the file /sbin/foobar exists) it will be made setuid
# root (regardless of what its permissions are on the host filesystem.
# Furthermore, you can use a single table entry to create a many device
# minors.  For example, if I wanted to create /dev/hda and /dev/hda[0-15]
# I could just use the following two table entries:
#   /dev/hda    b       640     0       0       3       0       0       0       -
#   /dev/hda    b       640     0       0       3       1       1       1       15
# 
# Device table entries take the form of:
# <name>    <type>      <mode>  <uid>   <gid>   <major> <minor> <start> <inc>   <count>
# where name is the file name,  type can be one of: 
#       f       A regular file
#       d       Directory
#       c       Character special device file
#       b       Block special device file
#       p       Fifo (named pipe)
# uid is the user id for the target file, gid is the group id for the
# target file.  The rest of the entries (major, minor, etc) apply only 
# to device special files.

# Have fun
# -Erik Andersen <andersen@codepoet.org>
#

#<name>		<type>	<mode>	<uid>	<gid>	<major>	<minor>	<start>	<inc>	<count>
/dev		d	755	0	0	-	-	-	-	-
/dev/pts	d	755	0	0	-	-	-	-	-
/dev/shm	d	755	0	0	-	-	-	-	-
/tmp		d	1777	0	0	-	-	-	-	-
/etc		d	755	0	0	-	-	-	-	-
#<name>					<type>	<mode>	<uid>	<gid>	<major>	<minor>	<start>	<inc>	<count>
/bin/busybox				f	4755	0	0	-	-	-	-	-
/etc/shadow				f	600	0	0	-	-	-	-	-
#/etc/passwd				f	644	0	0	-	-	-	-	-

# Normal system devices
/dev/mem	c	640	0	0	1	1	0	0	-
#/dev/kmem	c	640	0	0	1	2	0	0	-
/dev/null	c	666	0	0	1	3	0	0	-
/dev/zero	c	666	0	0	1	5	0	0	-

# in target_skeleton, we already linked /dev/random -> /dev/urandom
#/dev/random	c	666	0	0	1	8	0	0	-

/dev/urandom	c	666	0	0	1	9	0	0	-
/dev/ram	b	640	0	0	1	1	0	0	-
/dev/ram	b	640	0	0	1	0	0	1	4
/dev/loop	b	640	0	0	7	0	0	1	2
/dev/console	c	666	0	0	5	1	-	-	-
/dev/ppp	c	664	0	0	108	0	-	-	-
/dev/tty	c	666	0	0	5	0	-	-	-
/dev/tty	c	666	0	0	4	0	0	1	8
/dev/ttyp	c	666	0	0	3	0	0	1	8
/dev/ptyp	c	666	0	0	2	0	0	1	8 
/dev/ttyP	c	666	0	0	57	0	0	1	4
/dev/ttyS	c	666	0	0	4	64	0	1	4
/dev/v54sm	c	664	0	0	54	0	0	0	0
/dev/dk		c	664	0	0	63	0	0	1	4

# MTD stuff
#/dev/mtd	c	640	0	0	90	0	0	2	9
#/dev/mtdblock	b	640	0	0	31	0	0	1	8

# IDE
/dev/hda	b	640	0	0	3	0	0	0	-
/dev/hda1	b	640	0	0	3	1	0	0	-
/dev/hda2	b	640	0	0	3	2	0	0	-
/dev/hda3	b	640	0	0	3	3	0	0	-
/dev/hda4	b	640	0	0	3	4	0	0	-

# Real Time Clock
/dev/rtc	c	640	0	0	10	135	0	0	-

# SCSI
#/dev/sda	b	640	0	0	8	0	0	0	-
#/dev/sda1	b	640	0	0	8	1	0	0	-
#/dev/sda2	b	640	0	0	8	2	0	0	-
#/dev/sda3	b	640	0	0	8	3	0	0	-
#/dev/sda4	b	640	0	0	8	4	0	0	-

#/dev/sdb	b	640	0	0	8	16	0	0	-
#/dev/sdb1	b	640	0	0	8	17	0	0	-
#/dev/sdb2	b	640	0	0	8	18	0	0	-
#/dev/sdb3	b	640	0	0	8	19	0	0	-
#/dev/sdb4	b	640	0	0	8	20	0	0	-

# watchdog
/dev/watchdog	c	640	0	0	10	130	0	0	-

# ipmi
/dev/ipmi0	c	640	0	0	253	0	0	0	-

